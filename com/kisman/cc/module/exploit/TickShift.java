//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\User\Desktop\1.12 stable mappings"!

//Decompiled by Procyon!

package com.kisman.cc.module.exploit;

import com.kisman.cc.settings.*;
import com.kisman.cc.event.events.*;
import me.zero.alpine.listener.*;
import com.kisman.cc.module.*;
import java.util.function.*;
import com.kisman.cc.*;
import com.kisman.cc.util.*;
import net.minecraft.entity.*;
import net.minecraft.network.play.client.*;

public class TickShift extends Module
{
    private Setting ticks;
    private Setting timer;
    private boolean canTimer;
    private int tick;
    @EventHandler
    private final Listener<PacketEvent.Send> listener;
    
    public TickShift() {
        super("TickShift", "boobs", Category.EXPLOIT);
        this.ticks = new Setting("Ticks", this, 18.0, 1.0, 200.0, true);
        this.timer = new Setting("Timer", this, 1.8, 1.0, 3.0, false);
        this.canTimer = false;
        this.tick = 0;
        this.listener = (Listener<PacketEvent.Send>)new Listener(event -> {
            if (event.getPacket() instanceof CPacketPlayer) {
                --this.tick;
                if (this.tick <= 0) {
                    this.tick = 0;
                }
            }
        }, new Predicate[0]);
        TickShift.setmgr.rSetting(this.ticks);
        TickShift.setmgr.rSetting(this.timer);
    }
    
    @Override
    public void onEnable() {
        Kisman.EVENT_BUS.subscribe((Listener)this.listener);
        this.canTimer = false;
        this.tick = 0;
    }
    
    @Override
    public void onDisable() {
        Kisman.EVENT_BUS.unsubscribe((Listener)this.listener);
        this.canTimer = false;
        this.tick = 0;
        TickShift.mc.timer.tickLength = 50.0f;
    }
    
    @Override
    public void update() {
        if (TickShift.mc.player == null && TickShift.mc.world == null) {
            return;
        }
        if (this.tick <= 0) {
            this.tick = 0;
        }
        this.canTimer = false;
        TickShift.mc.timer.tickLength = 50.0f;
        if (this.tick > 0 && PlayerUtil.isMoving((EntityLivingBase)TickShift.mc.player)) {
            --this.tick;
            TickShift.mc.timer.tickLength = (float)(50.0 / this.timer.getValDouble());
        }
        if (!PlayerUtil.isMoving((EntityLivingBase)TickShift.mc.player)) {
            ++this.tick;
        }
        if (this.tick >= this.ticks.getValInt()) {
            this.tick = this.ticks.getValInt();
        }
    }
}
