//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\User\Desktop\1.12 stable mappings"!

//Decompiled by Procyon!

package com.kisman.cc.module.exploit;

import net.minecraft.entity.item.*;
import net.minecraft.util.math.*;
import i.gishreloaded.gishcode.utils.*;
import com.kisman.cc.settings.*;
import com.kisman.cc.module.*;
import net.minecraft.entity.*;
import i.gishreloaded.gishcode.utils.visual.*;
import java.util.*;

public class StrongholdFinder extends Module
{
    private EntityEnderEye eye1;
    private boolean eye1Done;
    private EntityEnderEye eye2;
    private boolean eye2Done;
    Vec2f v1s;
    Vec2f v1e;
    Vec2f v2s;
    Vec2f v2e;
    Vec2f intersection;
    private TimerUtils eyeTimer;
    private Setting mode;
    
    public StrongholdFinder() {
        super("StrongholdFinder", "this", Category.EXPLOIT);
        this.eye1Done = false;
        this.eye2Done = false;
        this.eyeTimer = new TimerUtils();
        this.mode = new Setting("Mode", this, false);
        StrongholdFinder.setmgr.rSetting(this.mode);
    }
    
    @Override
    public void onEnable() {
        if (!this.mode.getValBoolean()) {
            for (final Entity entity : StrongholdFinder.mc.world.loadedEntityList) {
                if (entity instanceof EntityEnderEye) {
                    ChatUtils.complete((Object)("Yaw: " + entity.rotationYaw));
                }
            }
        }
    }
    
    @Override
    public void update() {
        if (this.mode.getValBoolean()) {
            return;
        }
        if (this.eyeTimer.hasTimeElapsed(5000L, false) && this.eye2Done) {
            this.eye1Done = false;
            this.eye2Done = false;
            this.eye1 = null;
            this.eye2 = null;
        }
        for (final Entity entity : StrongholdFinder.mc.world.loadedEntityList) {
            if (entity instanceof EntityEnderEye) {
                final EntityEnderEye enderEye = (EntityEnderEye)entity;
                if (this.eye1 == null && !enderEye.isEntityEqual((Entity)this.eye2)) {
                    this.eye1 = enderEye;
                    ChatUtils.message((Object)"First eye found, please throw the next one a lot further away!");
                }
                else {
                    if (this.eye2 != null || enderEye.isEntityEqual((Entity)this.eye1)) {
                        continue;
                    }
                    this.eye2 = enderEye;
                    ChatUtils.message((Object)"Second eye found, calculating intersection...");
                }
            }
        }
        if (this.eye1 != null && !this.eye1Done) {
            if (this.eye1.ticksExisted < 10 || this.eye1.ticksExisted > 20) {
                return;
            }
            this.v1s = new Vec2f((float)this.eye1.lastTickPosX, (float)this.eye1.lastTickPosZ);
            this.v1e = new Vec2f((float)this.eye1.posX, (float)this.eye1.posZ);
            this.eye1Done = true;
        }
        if (this.eye2 != null && !this.eye2Done) {
            if (this.eye2.ticksExisted < 10 || this.eye2.ticksExisted > 20) {
                return;
            }
            this.v2s = new Vec2f((float)this.eye2.lastTickPosX, (float)this.eye2.lastTickPosZ);
            this.v2e = new Vec2f((float)this.eye2.posX, (float)this.eye2.posZ);
            this.eye2Done = true;
        }
        if (this.eye1Done && this.eye2Done && this.eyeTimer.hasTimeElapsed(6000L, false)) {
            this.eyeTimer.reset();
        }
    }
}
