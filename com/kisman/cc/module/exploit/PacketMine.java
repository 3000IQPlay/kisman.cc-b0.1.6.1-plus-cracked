//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\User\Desktop\1.12 stable mappings"!

//Decompiled by Procyon!

package com.kisman.cc.module.exploit;

import net.minecraft.block.*;
import com.kisman.cc.module.*;
import com.kisman.cc.*;
import com.kisman.cc.settings.*;
import net.minecraft.world.*;
import i.gishreloaded.gishcode.utils.*;
import net.minecraft.init.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;
import net.minecraft.util.*;
import i.gishreloaded.gishcode.utils.visual.*;
import net.minecraftforge.client.event.*;
import com.kisman.cc.util.*;
import net.minecraftforge.fml.common.eventhandler.*;

public class PacketMine extends Module
{
    private Block broken;
    private long startMs;
    private TimerUtils timer;
    private int render;
    
    public PacketMine() {
        super("PacketMine", "PacketMine", Category.EXPLOIT);
        this.startMs = 0L;
        Kisman.instance.settingsManager.rSetting(new Setting("voidsetting", this, "void", "setting"));
        this.timer = new TimerUtils();
    }
    
    @Override
    public void onEnable() {
        this.render = 0;
    }
    
    @Override
    public void onDisable() {
        this.render = 0;
    }
    
    @Override
    public void update() {
        if (PacketMine.mc.player == null && PacketMine.mc.world == null) {
            return;
        }
        if (PacketMine.mc.gameSettings.keyBindAttack.isKeyDown()) {
            if (PacketMine.mc.objectMouseOver.entityHit != null) {
                return;
            }
            if (PacketMine.mc.world.getBlockState(PacketMine.mc.objectMouseOver.getBlockPos()).getBlockHardness((World)PacketMine.mc.world, PacketMine.mc.objectMouseOver.getBlockPos()) == -1.0f) {
                return;
            }
            if (BlockUtils.getBlock(PacketMine.mc.objectMouseOver.getBlockPos()) != Blocks.AIR && BlockUtils.getBlock(PacketMine.mc.objectMouseOver.getBlockPos()) != null) {
                if (this.broken == null || this.broken == Blocks.AIR || Math.abs(this.startMs - System.currentTimeMillis()) > 15000L) {
                    this.broken = BlockUtils.getBlock(PacketMine.mc.objectMouseOver.getBlockPos());
                    this.startMs = System.currentTimeMillis();
                }
                this.render = 1;
                this.render = 2;
                PacketMine.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, PacketMine.mc.objectMouseOver.getBlockPos(), PacketMine.mc.objectMouseOver.sideHit));
                PacketMine.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, PacketMine.mc.objectMouseOver.getBlockPos(), PacketMine.mc.objectMouseOver.sideHit));
                PacketMine.mc.player.swingArm(EnumHand.MAIN_HAND);
                this.render = 0;
            }
            try {
                System.out.println("55555");
            }
            catch (Exception e) {
                ChatUtils.error((Object)("Block " + PacketMine.mc.objectMouseOver.getBlockPos().getX() + PacketMine.mc.objectMouseOver.getBlockPos().getY() + PacketMine.mc.objectMouseOver.getBlockPos().getZ() + " is not BLOCK!"));
            }
        }
    }
    
    @SubscribeEvent
    public void onRenderWorld(final RenderWorldLastEvent event) {
        try {
            if (this.render != 0) {
                if (this.render == 1) {
                    RenderUtil.drawBlockESP(PacketMine.mc.objectMouseOver.getBlockPos(), 1.0f, 0.0f, 0.0f);
                }
                else if (this.render == 2) {
                    RenderUtil.drawBlockESP(PacketMine.mc.objectMouseOver.getBlockPos(), 0.0f, 1.0f, 0.0f);
                }
            }
        }
        catch (Exception ex) {}
    }
}
