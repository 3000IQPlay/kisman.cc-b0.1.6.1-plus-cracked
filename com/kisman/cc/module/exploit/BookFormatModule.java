//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\User\Desktop\1.12 stable mappings"!

//Decompiled by Procyon!

package com.kisman.cc.module.exploit;

import java.lang.reflect.*;
import com.kisman.cc.module.*;
import net.minecraftforge.client.event.*;
import com.kisman.cc.oldclickgui.book.*;
import net.minecraft.item.*;
import net.minecraft.entity.player.*;
import net.minecraft.client.gui.*;
import net.minecraftforge.fml.common.eventhandler.*;

public class BookFormatModule extends Module
{
    private Field book_edited;
    private Field book_signed;
    
    public BookFormatModule() {
        super("BookFormatModule", "", Category.EXPLOIT);
        final Class<GuiScreenBook> screenBook = GuiScreenBook.class;
        try {
            this.book_edited = screenBook.getDeclaredField("book");
        }
        catch (NoSuchFieldException e3) {
            try {
                this.book_edited = screenBook.getDeclaredField("book");
            }
            catch (NoSuchFieldException e2) {
                throw new RuntimeException("FamilyFunPack error: no such field " + e2.getMessage() + " in class GuiScreenBook");
            }
        }
        this.book_edited.setAccessible(true);
        try {
            this.book_signed = screenBook.getDeclaredField("bookIsUnsigned");
        }
        catch (NoSuchFieldException e3) {
            try {
                this.book_signed = screenBook.getDeclaredField("bookIsUnsigned");
            }
            catch (NoSuchFieldException e2) {
                throw new RuntimeException("FamilyFunPack error: no such field " + e2.getMessage() + " in class GuiScreenBook");
            }
        }
        this.book_signed.setAccessible(true);
    }
    
    @SubscribeEvent
    public void onGuiOpen(final GuiOpenEvent event) {
        if (event.getGui() instanceof GuiScreenBook) {
            final GuiScreenBook gui = (GuiScreenBook)event.getGui();
            if (gui instanceof BookEditingGui) {
                return;
            }
            try {
                if (this.book_signed.get(gui)) {
                    final ItemStack book = (ItemStack)this.book_edited.get(gui);
                    event.setGui((GuiScreen)new BookEditingGui((EntityPlayer)BookFormatModule.mc.player, book));
                }
            }
            catch (IllegalAccessException e) {
                throw new RuntimeException("kisman.cc error: " + e.getMessage());
            }
        }
    }
}
