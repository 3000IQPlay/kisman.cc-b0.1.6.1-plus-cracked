//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\User\Desktop\1.12 stable mappings"!

//Decompiled by Procyon!

package com.kisman.cc.module.exploit;

import com.kisman.cc.event.events.*;
import me.zero.alpine.listener.*;
import com.kisman.cc.module.*;
import java.util.function.*;
import com.kisman.cc.*;
import net.minecraft.network.play.server.*;
import net.minecraft.util.text.*;
import net.minecraft.util.math.*;
import com.kisman.cc.util.*;
import i.gishreloaded.gishcode.utils.visual.*;

public class SoundCoordLogger extends Module
{
    @EventHandler
    private final Listener<PacketEvent.Receive> listener;
    
    public SoundCoordLogger() {
        super("SoundCoordLogger", "log", Category.EXPLOIT);
        this.listener = (Listener<PacketEvent.Receive>)new Listener(event -> {
            if (event.getPacket() instanceof SPacketEffect) {
                final SPacketEffect packet = (SPacketEffect)event.getPacket();
                switch (packet.getSoundType()) {
                    case 1023: {
                        ChatUtils.complete((Object)(TextFormatting.BLUE + "[SoundCoorLogger] " + TextFormatting.GRAY + "Wither Spawned at " + WorldUtil.vectorToString(new Vec3d((Vec3i)packet.getSoundPos()), new boolean[0])));
                        break;
                    }
                    case 1028: {
                        ChatUtils.complete((Object)(TextFormatting.BLUE + "[SoundCoorLogger] " + TextFormatting.GRAY + "Ender Dragon Spawned at " + WorldUtil.vectorToString(new Vec3d((Vec3i)packet.getSoundPos()), new boolean[0])));
                        break;
                    }
                    case 1038: {
                        ChatUtils.complete((Object)(TextFormatting.BLUE + "[SoundCoorLogger] " + TextFormatting.GRAY + "End Portal Spawned at " + WorldUtil.vectorToString(new Vec3d((Vec3i)packet.getSoundPos()), new boolean[0])));
                        break;
                    }
                }
            }
        }, new Predicate[0]);
    }
    
    @Override
    public void onEnable() {
        Kisman.EVENT_BUS.subscribe((Listener)this.listener);
    }
    
    @Override
    public void onDisable() {
        Kisman.EVENT_BUS.unsubscribe((Listener)this.listener);
    }
}
